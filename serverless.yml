service: dynamodb-design-experiments

plugins:
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-plugin-typescript

provider:
  name: aws
  runtime: nodejs12.x
  environment:
    DYNAMODB_TABLE: "PropertiesTableGSI"

custom:
  dynamodb:
    stages: -dev
    start:
      port: 8000
      inMemory: true
      migrate: true

functions:
  hello:
    handler: src/handler.hello
    events:
      - http:
          path: hello/
          method: get
          cors: true

resources:
  Resources:
    PropertiesDynamoDbTableWithRelations:
      $global: true
      Type: "AWS::DynamoDB::Table"
      Properties:
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: propertyId
            AttributeType: S
          - AttributeName: sortKey
            AttributeType: S
          - AttributeName: country_city
            AttributeType: S
          - AttributeName: ownerId
            AttributeType: S
          - AttributeName: startBookingDate
            AttributeType: S
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: propertyId
            KeyType: HASH
          - AttributeName: sortKey
            KeyType: RANGE
        SSESpecification:
          SSEEnabled: true
        GlobalSecondaryIndexes:
          - IndexName: Properties_GSI1
            KeySchema:
              - AttributeName: country_city
                KeyType: HASH
              - AttributeName: propertyId
                KeyType: RANGE
            Projection:
              NonKeyAttributes: [ownerId, title, description, city, country]
              ProjectionType: INCLUDE
          - IndexName: Properties_GSI2
            KeySchema:
              - AttributeName: ownerId
                KeyType: HASH
              - AttributeName: propertyId
                KeyType: RANGE
            Projection:
              NonKeyAttributes: [title, description, city, country]
              ProjectionType: INCLUDE
          - IndexName: Properties_GSI3
            KeySchema:
              - AttributeName: userId
                KeyType: HASH
              - AttributeName: startBookingDate
                KeyType: RANGE
            Projection:
              NonKeyAttributes: [propertyId, endBookingDate]
              ProjectionType: INCLUDE
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
